const char __char_to_hex[16] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};

int u64_to_char_ptr(u64 value, char* dest) {
    char temp[22];
    char* temp_ptr = temp;
    u64 v = value;
    
    // put each digit into temp (smallest to highest units)
    int i;
    while(v || temp_ptr == temp) {
        i = v % 10;
        v /= 10;
        *temp_ptr++ = i + '0';
    }
    
    int digits_count = temp_ptr - temp;
    
    // copy digits into final buffer in the correct order
    while(temp_ptr > temp) *dest++ = *--temp_ptr;
    return digits_count;
}

int s64_to_char_ptr(s64 value, char* dest) {
    if(value >= 0) return u64_to_char_ptr((u64)value, dest);
    
    *dest++ = '-';
    return 1 + u64_to_char_ptr(-value, dest);
}

int f64_to_char_ptr(f64 value, char* dest) {
	char* ptr = dest;
	char c;
	if(value < 0) {
		value = -value;
		*ptr++ = '-';
	}
	value += 0.000005;
	u64 int_part = value;
	value -= int_part;
	
	if(!int_part) {
		*ptr++ = '0';
	} else {
		char* p = ptr;
		while(int_part) {
			*p++ = '0' + int_part % 10;
			int_part /= 10;
		}
		char* p1 = p;
		
		while(p > ptr) {
			c = *--p;
			*p = *ptr;
			*ptr++ = c;
		}
		ptr = p1;
	}
	
	// decimal
	*ptr++ = '.';
	int precision = 5;
	while(precision--) {
		value *= 10.0;
		c = value;
		*ptr++ = '0' + c;
		value -= c;
	}
	return ptr - dest;
}

int ptr_to_char_ptr(u64 ptr, char* dest) {
	int idx = 0;
	char temp[19];
	for(int i = 0; i < 4; i++) {
		u8 v1 = (ptr >> 0)  & 0b1111;
		u8 v2 = (ptr >> 4)  & 0b1111;
		u8 v3 = (ptr >> 8)  & 0b1111;
		u8 v4 = (ptr >> 12) & 0b1111;
		
		temp[idx++] = __char_to_hex[v1];
		temp[idx++] = __char_to_hex[v2];
		temp[idx++] = __char_to_hex[v3];
		temp[idx++] = __char_to_hex[v4];
		temp[idx++] = '_';
		
		ptr = ptr >> 16;
	}
	dest[0] = '0';
	dest[1] = 'x';
	for(int i = 0; i < 19; i++) {
		dest[i + 2] = temp[18 - i];
	}
	return 21;
}

int u32_as_hex_to_char_ptr(u32 data, char* dest) {
	int idx = 0;
	char temp[9];
	u8 v1 = (data >> 0)  & 0b1111;
	u8 v2 = (data >> 4)  & 0b1111;
	u8 v3 = (data >> 8)  & 0b1111;
	u8 v4 = (data >> 12) & 0b1111;
	temp[idx++] = __char_to_hex[v1];
	temp[idx++] = __char_to_hex[v2];
	temp[idx++] = __char_to_hex[v3];
	temp[idx++] = __char_to_hex[v4];
	temp[idx++] = '_';
	data = data >> 16;
	v1 = (data >> 0)  & 0b1111;
	v2 = (data >> 4)  & 0b1111;
	v3 = (data >> 8)  & 0b1111;
	v4 = (data >> 12) & 0b1111;
	temp[idx++] = __char_to_hex[v1];
	temp[idx++] = __char_to_hex[v2];
	temp[idx++] = __char_to_hex[v3];
	temp[idx++] = __char_to_hex[v4];
	dest[0] = '0';
	dest[1] = 'x';
	for(int i = 0; i < 9; i++) {
		dest[i + 2] = temp[8 - i];
	}
	return 11;
}

int s32_to_char_ptr(s32 value, char* dest) { return s64_to_char_ptr((s64)value, dest); }
int s16_to_char_ptr(s16 value, char* dest) { return s64_to_char_ptr((s64)value, dest); }
int s8_to_char_ptr( s8  value, char* dest) { return s64_to_char_ptr((s64)value, dest); }
int u32_to_char_ptr(u32 value, char* dest) { return u64_to_char_ptr((u64)value, dest); }
int u16_to_char_ptr(u16 value, char* dest) { return u64_to_char_ptr((u64)value, dest); }
int u8_to_char_ptr( u8  value, char* dest) { return u64_to_char_ptr((u64)value, dest); }
int f32_to_char_ptr(f32 value, char* dest) { return f64_to_char_ptr((f64)value, dest); }

//
// new print (like old but buffered for extra speed)
//

#ifdef _WIN64
extern "C" {
	__declspec(dllimport) s32 WriteConsoleA(void* handle, const void* buff, s32 len, s32* chars_written, void* reserved);
	__declspec(dllimport) void* GetStdHandle(u32 nStdHandle);
}

int __buffer_index = 0;
const int __BUFF_SIZE = 0xFF;
char __print_buff[__BUFF_SIZE] = "";
inline void flush_to_stdout() {
	void* handle = GetStdHandle((s32) - 11);  // output handle
	s32 out;
	WriteConsoleA(handle, __print_buff, __buffer_index, &out, null);
    __buffer_index = 0;
}
inline void write_to_console(const char* buff, u32 len) {
	void* handle = GetStdHandle((s32) - 11);  // output handle
	s32 out;
	WriteConsoleA(handle, buff, len, &out, null);
}
#endif

// print standard specializations
// API(cogno): maybe a name like custom_format is better? I don't know
inline void printsl_custom(const char* s) { int index = 0; while(s[index]) __print_buff[__buffer_index++] = s[index++]; }
inline void printsl_custom(char* s)       { int index = 0; while(s[index]) __print_buff[__buffer_index++] = s[index++]; }
inline void printsl_custom(char c)        { __print_buff[__buffer_index++] = c; }
inline void printsl_custom(s8  d)         { __buffer_index += s8_to_char_ptr( d, __print_buff + __buffer_index); }
inline void printsl_custom(s16 d)         { __buffer_index += s16_to_char_ptr(d, __print_buff + __buffer_index); }
inline void printsl_custom(s32 d)         { __buffer_index += s32_to_char_ptr(d, __print_buff + __buffer_index); }
inline void printsl_custom(s64 d)         { __buffer_index += s64_to_char_ptr(d, __print_buff + __buffer_index); }
inline void printsl_custom(u8  d)         { __buffer_index += u8_to_char_ptr( d, __print_buff + __buffer_index); }
inline void printsl_custom(u16 d)         { __buffer_index += u16_to_char_ptr(d, __print_buff + __buffer_index); }
inline void printsl_custom(u32 d)         { __buffer_index += u32_to_char_ptr(d, __print_buff + __buffer_index); }
inline void printsl_custom(u64 d)         { __buffer_index += u64_to_char_ptr(d, __print_buff + __buffer_index); }
inline void printsl_custom(f32 f)         { __buffer_index += f32_to_char_ptr(f, __print_buff + __buffer_index); }
inline void printsl_custom(f64 f)         { __buffer_index += f64_to_char_ptr(f, __print_buff + __buffer_index); }
inline void printsl_custom(bool b)        { if (b) printsl_custom("true"); else printsl_custom("false"); }
inline void printsl_custom() { }

// default behaviour, unknown types prints "(unknown type)", while pointers are printed as such
template<typename T> void printsl_custom(T v)  { printsl_custom("(unknown type)"); }
template<typename T> void printsl_custom(T* v) { __buffer_index += ptr_to_char_ptr((u64)v, __print_buff + __buffer_index); } // NOTE(cogno): leave this before const char* s so strings are printed as such (and not as pointers)


// first we recursively accumulate into a buffer, then we flush it
inline void accumulate_into_buffer(const char* s) { 
	const char* c = s;
	do { __print_buff[__buffer_index++] = c[0]; } while(!++c);
}
template <typename T, typename... Types>
void accumulate_into_buffer(const char* s, T t1, Types... others) {
    int current_index = 0;
    while(true) {
        char c = s[current_index++];
        if(c == 0) return;
        else if(c == '\\') {
            char next = s[current_index];
            // escape characters
            if(next == '%') { printsl_custom('%'); current_index++; }
        } else if(c == '%') {
            break; // put formatted input
        } else {
            // just a character to print
            printsl_custom(c);
        }
    }
    printsl_custom(t1);
    accumulate_into_buffer(s + current_index, others...);
}

//
// print single inputs
//
template <typename T>
void printsl(T t) {
    printsl_custom(t);
    flush_to_stdout();
}

template <typename T>
void print(T t) {
    printsl_custom(t);
    printsl_custom('\n');
    flush_to_stdout();
}

//
// print multiple inputs
//
template <typename T, typename... Types>
void printsl(const char* s, T t1, Types... others) {
    accumulate_into_buffer(s, t1, others...);
    flush_to_stdout();
}

// print formatting
template <typename T, typename... Types>
void print(const char* s, T t1, Types... others) {
    accumulate_into_buffer(s, t1, others...);
    printsl_custom('\n');
    flush_to_stdout();
}




//
// a new type of print, even faster but with a different syntax
// print("this is a var: %, this is another var: %", var1, var2);
// now becomes
// printv("this is a var: ", var, ", this is another var: ", var2);
//
void accumulate_v2() { }
template <typename T, typename... Types>
void accumulate_v2(T t1, Types... others) {
    printsl_custom(t1);
	printsl_custom(' ');
    accumulate_v2(others...);
}

// print formatting
template <typename... Types>
void printv(Types... others) {
    accumulate_v2(others...);
    printsl_custom('\n');
    flush_to_stdout();
}

template <typename... Types>
void printvsl(Types... others) {
    accumulate_v2(others...);
    flush_to_stdout();
}

#ifdef DEBUG
void print_tab_if_there_is_a_message(const char* msg) { printsl("    "); }
void print_tab_if_there_is_a_message() { }
#endif

// defer macros. calls code inside a defer(...) macro when the current scope closes (function exit, if ending, for cycle ending, ...)
template <typename F>
struct ScopeExit {
    ScopeExit(F f) : f(f) {}
    ~ScopeExit() { f(); }
    F f;
};

template <typename F>
ScopeExit<F> MakeScopeExit(F f) {
    return ScopeExit<F>(f);
};

#define STRING_JOIN_(arg1, arg2) arg1 ## arg2
#define STRING_JOIN(arg1, arg2) STRING_JOIN_(arg1, arg2)
#define defer(code) auto STRING_JOIN(scope_exit_, __LINE__) = MakeScopeExit([=](){code;})



// when you convert va args to string you get "a, b, c" instead of "a", "b", "c"
// and you can't have recursive macros, so we need to make this shitfest of giant walls for like size 100 macros
// i fucking hate this but at least it works
//                         - cogno 2023/09/29

#define MSVC_BUG(MACRO, ARGS) MACRO ARGS 



#define NUM_ARGS_2(_1,_2,_3,_4,_5,_6,_7,_8,_9,_10,_11,_12,_13,_14,_15,_16,_17,_18,_19,_20,_21,_22,_23,_24,_25,_26,_27,_28,_29,_30,_31,_32,_33,_34,_35,_36,_37,_38,_39,_40,_41,_42,_43,_44,_45,_46,_47,_48,_49,_50,_51,_52,_53,_54,_55,_56,_57,_58,_59,_60,_61,_62,_63,_64,_65,_66,_67,_68,_69,_70,_71,_72,_73,_74,_75,_76,_77,_78,_79,_80,_81,_82,_83,_84,_85,_86,_87,_88,_89,_90,_91,_92,_93,_94,_95,_96,_97,_98,_99,_100, TOTAL, ...) TOTAL
#define NUM_ARGS_1(...) MSVC_BUG(NUM_ARGS_2, (__VA_ARGS__))
#define NUM_ARGS(...) NUM_ARGS_1(__VA_ARGS__, 100,99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1)
// YES THIS IS JUST TO KNOW HOW MANY FUCKING VARARGS WE HAVE, JUST WAIT


#define COUNTER(...) MSVC_BUG(NUM_ARGS, (__VA_ARGS__))

#define TO_STR_1(_1) #_1
#define TO_STR_2(_1, _2) #_1, #_2
#define TO_STR_3(_1, _2, _3) #_1, #_2, #_3
#define TO_STR_4(_1, _2, _3, _4) #_1, #_2, #_3, #_4
#define TO_STR_5(_1, _2, _3, _4, _5) #_1, #_2, #_3, #_4, #_5
#define TO_STR_6(_1, _2, _3, _4, _5, _6) #_1, #_2, #_3, #_4, #_5, #_6
#define TO_STR_7(_1, _2, _3, _4, _5, _6, _7) #_1, #_2, #_3, #_4, #_5, #_6, #_7
#define TO_STR_8(_1, _2, _3, _4, _5, _6, _7, _8) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8
#define TO_STR_9(_1, _2, _3, _4, _5, _6, _7, _8, _9) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9
#define TO_STR_10(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10
#define TO_STR_11(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11
#define TO_STR_12(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12
#define TO_STR_13(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13
#define TO_STR_14(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14
#define TO_STR_15(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15
#define TO_STR_16(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16
#define TO_STR_17(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17
#define TO_STR_18(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18
#define TO_STR_19(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19
#define TO_STR_20(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20
#define TO_STR_21(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21
#define TO_STR_22(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22
#define TO_STR_23(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23
#define TO_STR_24(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24
#define TO_STR_25(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25
#define TO_STR_26(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26
#define TO_STR_27(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27
#define TO_STR_28(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28
#define TO_STR_29(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29
#define TO_STR_30(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30
#define TO_STR_31(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31
#define TO_STR_32(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32
#define TO_STR_33(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33
#define TO_STR_34(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34
#define TO_STR_35(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35
#define TO_STR_36(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36
#define TO_STR_37(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37
#define TO_STR_38(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38
#define TO_STR_39(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39
#define TO_STR_40(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40
#define TO_STR_41(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41
#define TO_STR_42(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42
#define TO_STR_43(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43
#define TO_STR_44(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44
#define TO_STR_45(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45
#define TO_STR_46(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46
#define TO_STR_47(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47
#define TO_STR_48(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48
#define TO_STR_49(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49
#define TO_STR_50(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50
#define TO_STR_51(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51
#define TO_STR_52(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52
#define TO_STR_53(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53
#define TO_STR_54(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54
#define TO_STR_55(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55
#define TO_STR_56(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56
#define TO_STR_57(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57
#define TO_STR_58(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58
#define TO_STR_59(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58, #_59
#define TO_STR_60(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58, #_59, #_60
#define TO_STR_61(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58, #_59, #_60, #_61
#define TO_STR_62(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58, #_59, #_60, #_61, #_62
#define
#define
#define
#define
#define
#define
#define
#define
#define
#define
#define
#define
#define TO_STR_75(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58, #_59, #_60, #_61, #_62, #_63, #_64, #_65, #_66, #_67, #_68, #_69, #_70, #_71, #_72, #_73, #_74, #_75
#define TO_STR_76(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58, #_59, #_60, #_61, #_62, #_63, #_64, #_65, #_66, #_67, #_68, #_69, #_70, #_71, #_72, #_73, #_74, #_75, #_76
#define TO_STR_77(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58, #_59, #_60, #_61, #_62, #_63, #_64, #_65, #_66, #_67, #_68, #_69, #_70, #_71, #_72, #_73, #_74, #_75, #_76, #_77
#define TO_STR_78(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77, _78) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58, #_59, #_60, #_61, #_62, #_63, #_64, #_65, #_66, #_67, #_68, #_69, #_70, #_71, #_72, #_73, #_74, #_75, #_76, #_77, #_78
#define TO_STR_79(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77, _78, _79) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58, #_59, #_60, #_61, #_62, #_63, #_64, #_65, #_66, #_67, #_68, #_69, #_70, #_71, #_72, #_73, #_74, #_75, #_76, #_77, #_78, #_79
#define TO_STR_80(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77, _78, _79, _80) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58, #_59, #_60, #_61, #_62, #_63, #_64, #_65, #_66, #_67, #_68, #_69, #_70, #_71, #_72, #_73, #_74, #_75, #_76, #_77, #_78, #_79, #_80
#define TO_STR_81(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77, _78, _79, _80, _81) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58, #_59, #_60, #_61, #_62, #_63, #_64, #_65, #_66, #_67, #_68, #_69, #_70, #_71, #_72, #_73, #_74, #_75, #_76, #_77, #_78, #_79, #_80, #_81
#define TO_STR_82(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77, _78, _79, _80, _81, _82) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58, #_59, #_60, #_61, #_62, #_63, #_64, #_65, #_66, #_67, #_68, #_69, #_70, #_71, #_72, #_73, #_74, #_75, #_76, #_77, #_78, #_79, #_80, #_81, #_82
#define TO_STR_83(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77, _78, _79, _80, _81, _82, _83) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58, #_59, #_60, #_61, #_62, #_63, #_64, #_65, #_66, #_67, #_68, #_69, #_70, #_71, #_72, #_73, #_74, #_75, #_76, #_77, #_78, #_79, #_80, #_81, #_82, #_83
#define TO_STR_84(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77, _78, _79, _80, _81, _82, _83, _84) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58, #_59, #_60, #_61, #_62, #_63, #_64, #_65, #_66, #_67, #_68, #_69, #_70, #_71, #_72, #_73, #_74, #_75, #_76, #_77, #_78, #_79, #_80, #_81, #_82, #_83, #_84
#define
#define
#define
#define TO_STR_88(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77, _78, _79, _80, _81, _82, _83, _84, _85, _86, _87, _88) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58, #_59, #_60, #_61, #_62, #_63, #_64, #_65, #_66, #_67, #_68, #_69, #_70, #_71, #_72, #_73, #_74, #_75, #_76, #_77, #_78, #_79, #_80, #_81, #_82, #_83, #_84, #_85, #_86, #_87, #_88
#define
#define
#define
#define
#define
#define
#define
#define
#define
#define
#define TO_STR_99(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77, _78, _79, _80, _81, _82, _83, _84, _85, _86, _87, _88, _89, _90, _91, _92, _93, _94, _95, _96, _97, _98, _99) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58, #_59, #_60, #_61, #_62, #_63, #_64, #_65, #_66, #_67, #_68, #_69, #_70, #_71, #_72, #_73, #_74, #_75, #_76, #_77, #_78, #_79, #_80, #_81, #_82, #_83, #_84, #_85, #_86, #_87, #_88, #_89, #_90, #_91, #_92, #_93, #_94, #_95, #_96, #_97, #_98, #_99
#define TO_STR_100(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77, _78, _79, _80, _81, _82, _83, _84, _85, _86, _87, _88, _89, _90, _91, _92, _93, _94, _95, _96, _97, _98, _99, _100) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58, #_59, #_60, #_61, #_62, #_63, #_64, #_65, #_66, #_67, #_68, #_69, #_70, #_71, #_72, #_73, #_74, #_75, #_76, #_77, #_78, #_79, #_80, #_81, #_82, #_83, #_84, #_85, #_86, #_87, #_88, #_89, #_90, #_91, #_92, #_93, #_94, #_95, #_96, #_97, #_98, #_99, #_100

#define DO_CONCAT(a, b) a##b
#define STR_CONCAT(a, b) DO_CONCAT(a, b)

#define TO_STR_N(n, ...) MSVC_BUG(STR_CONCAT(TO_STR_, n), (__VA_ARGS__))
#define STRINGIFY_(n, ...) TO_STR_N(n, __VA_ARGS__)
#define STRINGIFY(...) MSVC_BUG(STRINGIFY_, (COUNTER(__VA_ARGS__), __VA_ARGS__))

#define ENUM(EnumName, ...) \
enum class EnumName { __VA_ARGS__ }; \
const int EnumName##Size = NUM_ARGS(__VA_ARGS__); \
const char* EnumName##Strings[] = { STRINGIFY(__VA_ARGS__) }; \
const char* to_string(EnumName to_convert) { \
    int index = (s32)to_convert; \
    ASSERT_BOUNDS(index, 0, EnumName##Size); \
    return EnumName##Strings[index]; \
} \
void printsl_custom(EnumName to_print) { \
    printsl("%::%", #EnumName, to_string(to_print)); \
}
